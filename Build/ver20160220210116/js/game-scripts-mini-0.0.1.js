(function(e,t,n){"use strict";var r=qc.defineBehaviour("qc.engine.CatcherDetectAreaUI",qc.Behaviour,function(){},{});r.prototype.currentBox=function(){var e=this,t=e.gameObject,n={x:t.x,y:t.y,width:t.width,height:t.height};return console.log(n),n},"use strict",e.CatchGame=qc.CatchGame={operation:{}},qc.initGame=function(e){CatchGame.catcher=new qc.CatchGame.CatcherLogic},"use strict";var i=qc.CatchGame.FallItemFactory=function(){var e=this;e.factorydata=[{id:3,icon:"3.png",score:10,noRepeatRadius:500,noOtherRadius:100},{id:0,icon:"0.png",score:10,noRepeatRadius:300,noOtherRadius:100},{id:1,icon:"1.png",score:10,noRepeatRadius:180,noOtherRadius:100},{id:2,icon:"2.png",score:10,noRepeatRadius:180,noOtherRadius:100}],e.data=[];for(var t=0;t<e.factorydata.length;t++){var n=new qc.CatchGame.FallItemLogic;n.initObj(e.factorydata[t]),e.data.push(n)}e.pool=[],e.range={x:0,y:0,width:640,height:960},e.tryUpTimes=5};i.prototype={},i.prototype.constructor=i,t.defineProperties(i.prototype,{}),i.prototype.fillAreaPool=function(e){var t=this;t.pool=t.getFillAreaPool(e)},i.prototype.getFillAreaPool=function(e){var t=this,n=[];for(var r=0;r<t.data.length;r++){var i=t.data[r];n=n.concat(t.fillUP(i,e,n))}return n},i.prototype.fillUP=function(e,t,n){var r=this,i=r.tryUpTimes,s=n;for(;;){var o={x:Math.random()*t.width-t.x,y:Math.random()*t.height-t.y};if(r.putCheck(e.id,o,s))e.x=o.x,e.y=o.y,s.push(e.clone());else{i--;if(i<0)break}}return s},i.prototype.putCheck=function(e,t,n){var r=this;for(var i=0;i<n.length;i++){var s=n[i];if(s.id==e&&checkPointInRadius({x:s.x,y:s.y},s.noRepeatRadius,t))return!1;if(checkPointInRadius({x:s.x,y:s.y},s.noOtherRadius,t))return!1}return!0},"use strict";var s=qc.CatchGame.FallItemLogic=function(){var e=this;e.icon="",e.id="",e.x=0,e.y=0,e.noRepeatRadius=0,e.noOtherRadius=0,e.score=0};s.prototype={},s.prototype.constructor=s,t.defineProperties(s.prototype,{pos:{get:function(){return{x:this._pos.x,y:this._pos.y}},set:function(e){this.x=e.x,this.y=e.y}}}),s.prototype.init=function(e,t,n,r,i,s,o){var u=this;u.icon=t,u.id=e,u.x=n,u.y=r,u.noRepeatRadius=i,u.noOtherRadius=s,u.score=o},s.prototype.initObj=function(e){var t=this;t.icon=e.icon,t.id=e.id,t.noRepeatRadius=e.noRepeatRadius,t.noOtherRadius=e.noOtherRadius,t.score=e.score},s.prototype.clone=function(){var e=this,t={};return t.icon=e.icon,t.id=e.id,t.x=e.x,t.y=e.y,t.noRepeatRadius=e.noRepeatRadius,t.noOtherRadius=e.noOtherRadius,t.score=e.score,t},e.inBox=function(e,t){return inBox_x(e,t)&&inBox_y(e,t)?!0:!1},e.inBox_x=function(e,t){return e.x<=t.x&&t.x<=e.x+e.width?!0:!1},e.inBox_y=function(e,t){return e.y<=t.y&&t.y<=e.y+e.height?!0:!1},e.distanceSquare=function(e,t,n,r){var i=Math.pow(Math.abs(e-n),2),s=Math.pow(Math.abs(t-r),2);return i+s},e.distance=function(t,n,r,i){return Math.sqrt(distanceSquare(t,n,r,i))},e.checkPointInRadius=function(e,t,n){return distance(e.x,e.y,n.x,n.y)<t?!0:!1};var o=qc.defineBehaviour("qc.engine.CatcherAreaUI",qc.Behaviour,function(){},{});o.prototype.currentBox=function(){var e=this,t=e.gameObject,n={x:t.x,y:t.y,width:t.width,height:t.height};return n},"use strict";var u=qc.CatchGame.CatcherLogic=function(){var e=this;e.x=0,e.y=0,e.detectArea={x:0,y:0,width:0,height:0},e._countOffset={x:0,y:0,width:0,height:0}};u.prototype={},u.prototype.constructor=u,t.defineProperties(u.prototype,{}),u.prototype.countBoxOffset=function(){var e=this;e._countOffset.x=e.x-e.detectArea.x,e._countOffset.y=e.y-e.detectArea.y},u.prototype.updateBox=function(){var e=this;e.detectArea.x=e.x-e._countOffset.x,e.detectArea.y=e.y-e._countOffset.y},u.prototype.updateBoxX=function(){var e=this;e.detectArea.x=e.x-e._countOffset.x},u.prototype.updateBoxY=function(){var e=this;e.detectArea.y=e.y-e._countOffset.y},"use strict";var a=qc.defineBehaviour("qc.engine.CatcherUI",qc.Behaviour,function(){var e=this;e.moveing_area={x:0,y:0,width:640,height:960},e._mousepos={x:0,y:0},e.logicObj=null,e.pos={get x(){return this._x},set x(t){e.updateLogicX(t),this._x=t},get y(){return this._y},set y(t){e.updateLogicY(t),this._y=t},_x:0,_y:0}},{CheckAreaNode:qc.Serializer.NODE,ImageNode:qc.Serializer.NODE,AreaNode:qc.Serializer.NODE,WorldNode:qc.Serializer.NODE});a.prototype.awake=function(){var e=this,t=e.gameObject;e.AreaNode&&(e.Area=e.AreaNode.getScript("qc.engine.CatcherAreaUI"),e.moveing_area=e.Area.currentBox());var n={};e.CheckAreaNode&&(e.CheckArea=e.CheckAreaNode.getScript("qc.engine.CatcherDetectAreaUI"),n=e.CheckArea.currentBox(),n.x+=t.x,n.y+=t.y),e.init(qc.CatchGame.catcher,n)},a.prototype.update=function(){},a.prototype.init=function(e,t){var n=this,r=n.gameObject;n.logicObj=e,n.logicObj.x=r.x,n.logicObj.y=r.y,n.logicObj.detectArea=t,n.logicObj.countBoxOffset()},a.prototype.updateLogicX=function(e){this.logicObj.x=e,this.logicObj.updateBoxX()},a.prototype.updateLogicY=function(e){this.logicObj.y=e,this.logicObj.updateBoxY()},a.prototype.onDown=function(e){var t=this,n=t.gameObject;t._press=!0,t._mousepos=n.getWorldPosition(),console.log("dragStart")},a.prototype.onDrag=function(t){var n=this,r=n.gameObject;if(n._press){n._mousepos.x+=t.source.deltaX,n._mousepos.y+=t.source.deltaY;var i=n.WorldNode.toLocal(n._mousepos),s=r.getWorldPosition();if(e.inBox(n.moveing_area,i)){var o=r.parent.toLocal(n._mousepos);this.pos.x=r.x=o.x,this.pos.y=r.y=o.y}else if(e.inBox_x(n.moveing_area,i)){var u=r.parent.toLocal(n._mousepos),a=r.parent.toLocal(s);this.pos.x=r.x=u.x,this.pos.y=r.y=a.y}else if(e.inBox_y(n.moveing_area,i)){var u=r.parent.toLocal(s),a=r.parent.toLocal(n._mousepos);this.pos.x=r.x=u.x,this.pos.y=r.y=a.y}else{var u=r.parent.toLocal(s),a=r.parent.toLocal(s);this.pos.x=r.x=u.x,this.pos.y=r.y=a.y}}},a.prototype.onDragEnd=function(e){var t=this,n=t.gameObject;t._press=!1,console.log("dragEnd")};var f=qc.defineBehaviour("qc.engine.FallItemUI",qc.Behaviour,function(){var e=this,t=e.gameObject;e.score=10},{testPrefab:qc.Serializer.PREFAB});t.defineProperties(f.prototype,{pos_x:{get:function(){return this._pos.x},set:function(e){this._pos.x=e}},pos_y:{get:function(){return this._pos.y},set:function(e){this._pos.y=e}},pos:{get:function(){return this._pos},set:function(e){this._pos=e}}}),f.prototype.awake=function(){var e=this},f.prototype.dispear=function(){var e=this,t=e.gameObject,n=e.getScript("qc.TweenAlpha");t.visible=!0,n.resetToBeginning(),n.onFinished.addOnce(function(){t.visible=!1,t.destroy()}),n.playForward();if(e.testPrefab){var r=e.game.add.clone(e.testPrefab,e.gameObject.parent);e.test=r.getScript("qc.engine.ScoreUI")}var i=e.score>0?"+"+e.score.toString():e.score.toString();e.test.show(i)},"use strict";var l=qc.defineBehaviour("qc.engine.ScoreUI",qc.Behaviour,function(){},{});l.prototype.awake=function(){var e=this,t=e.gameObject;t.visible=!1},l.prototype.update=function(){},l.prototype.show=function(e){var t=this,n=t.gameObject,r=t.getScript("qc.TweenAlpha");n.text=e,n.visible=!0,r.resetGroupToBeginning(),r.onFinished.addOnce(function(){n.visible=!1,n.destroy()}),r.playGroupForward()},"use strict";var c=qc.defineBehaviour("qc.engine.TestSpriteUI",qc.Behaviour,function(){var e=this;e.itemFactory=new qc.CatchGame.FallItemFactory,e.catcher=new qc.CatchGame.CatcherLogic},{testPrefab:qc.Serializer.PREFAB,catcherPrefab:qc.Serializer.PREFAB,worldNode:qc.Serializer.NODE});c.prototype.awake=function(){var e=this;if(e.catcherPrefab){var t=e.game.add.clone(e.catcherPrefab,e.worldNode);e.test=t.getScript("qc.engine.CathcerUI")}},c.prototype.update=function(){},c.prototype.onClick=function(){this.onCreatePoolFallItem()},c.prototype.onCreatePoolFallItem=function(){var e=this,t={x:0,y:0,width:640,height:960},n=e.itemFactory.getFillAreaPool(t);for(var r=0;r<n.length;r++){var i=n[r],s=e.game.add.clone(e.testPrefab,e.worldNode);s.frame=i.icon,s.x=i.x,s.y=i.y}},c.prototype.onCreateOneFallItem=function(){var e=this;console.log("onclick");if(!e.flag){e.flag=!0;var t=e.game.add.clone(e.testPrefab,e.gameObject);e.test=t.getScript("qc.engine.FallItemUI")}else e.flag=!1,e.test.dispear()},c.prototype.onScoreDispear=function(){if(self.testPrefab){var e=self.game.add.clone(self.testPrefab,self.gameObject);self.test=e.getScript("qc.engine.ScoreUI")}self.test.show("+5")},"use strict";var h=qc.defineBehaviour("qc.engine.CatchGameUI",qc.Behaviour,function(){var e=this},{});h.prototype.awake=function(){var e=this,t=e.gameObject},h.prototype.update=function(){}}).call(this,this,Object)